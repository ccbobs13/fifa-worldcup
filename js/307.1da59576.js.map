{"version":3,"file":"js/307.1da59576.js","mappings":"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","sources":["webpack://graphqlapi-dashboard/./src/views/StatistiquesView.vue","webpack://graphqlapi-dashboard/src/views/StatistiquesView.vue","webpack://graphqlapi-dashboard/./src/views/StatistiquesView.vue?6694","webpack://graphqlapi-dashboard/./src/views/StatistiquesView.vue?35ff","webpack://graphqlapi-dashboard/../../../src/components/VChipGroup/VChipGroup.ts"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',[_c('v-row',{attrs:{\"no-gutters\":\"\"}},[_c('v-col',{attrs:{\"cols\":\"12\"}},[_c('v-chip-group',{attrs:{\"active-class\":\"red--text\",\"column\":\"\",\"mandatory\":\"\"},model:{value:(_vm.chipGroup),callback:function ($$v) {_vm.chipGroup=$$v},expression:\"chipGroup\"}},_vm._l((_vm.tags),function(tag){return _c('v-chip',{key:tag.tag,attrs:{\"filter\":\"\",\"outlined\":\"\"}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\" \"+_vm._s(tag.icon)+\" \")]),_vm._v(\" \"+_vm._s(tag.tag)+\" \")],1)}),1)],1)],1),(_vm.getChipValue == 0)?_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[[_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.tenBestAttendance,\"items-per-page\":10,\"loading\":_vm.loading,\"loading-text\":\"Chargement en cours\",\"locale\":\"fr\",\"no-data-text\":\"Aucune donnée\",\"no-results-text\":\"Aucune correspondance\"},scopedSlots:_vm._u([{key:`item.rang`,fn:function({ item }){return [_vm._v(\" \"+_vm._s(_vm.tenBestAttendance.indexOf(item) + 1)+\" \")]}}],null,true)})]],2)],1):_vm._e(),(_vm.getChipValue == 1)?_c('v-row',[_c('v-col',{attrs:{\"cols\":\"12\"}},[[_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers2,\"items\":_vm.champions,\"items-per-page\":10,\"loading\":_vm.loading2,\"loading-text\":\"Chargement en cours\",\"locale\":\"fr\",\"no-data-text\":\"Aucune donnée\",\"no-results-text\":\"Aucune correspondance\"},scopedSlots:_vm._u([{key:`item.rang`,fn:function({ item }){return [_vm._v(\" \"+_vm._s(_vm.champions.indexOf(item) + 1)+\" \")]}}],null,true)})]],2)],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <v-row no-gutters>\n      <v-col cols=\"12\">\n        <v-chip-group\n          active-class=\"red--text\"\n          column\n          mandatory\n          v-model=\"chipGroup\"\n        >\n          <v-chip filter outlined v-for=\"tag in tags\" :key=\"tag.tag\">\n            <v-icon left>\n              {{ tag.icon }}\n            </v-icon>\n            {{ tag.tag }}\n          </v-chip>\n        </v-chip-group>\n      </v-col>\n    </v-row>\n\n    <v-row v-if=\"getChipValue == 0\">\n      <v-col cols=\"12\">\n        <template>\n          <v-data-table\n            :headers=\"headers\"\n            :items=\"tenBestAttendance\"\n            :items-per-page=\"10\"\n            :loading=\"loading\"\n            loading-text=\"Chargement en cours\"\n            locale=\"fr\"\n            no-data-text=\"Aucune donnée\"\n            no-results-text=\"Aucune correspondance\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:[`item.rang`]=\"{ item }\">\n              {{ tenBestAttendance.indexOf(item) + 1 }}\n            </template>\n          </v-data-table>\n        </template>\n      </v-col>\n    </v-row>\n\n    <v-row v-if=\"getChipValue == 1\">\n      <v-col cols=\"12\">\n        <template>\n          <v-data-table\n            :headers=\"headers2\"\n            :items=\"champions\"\n            :items-per-page=\"10\"\n            :loading=\"loading2\"\n            loading-text=\"Chargement en cours\"\n            locale=\"fr\"\n            no-data-text=\"Aucune donnée\"\n            no-results-text=\"Aucune correspondance\"\n            class=\"elevation-1\"\n          >\n            <template v-slot:[`item.rang`]=\"{ item }\">\n              {{ champions.indexOf(item) + 1 }}\n            </template>\n          </v-data-table>\n        </template>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nimport { GET_TEN_BEST_ATTENDANCE, GET_ALL_CHAMPIONS } from \"@/graphql/queries\";\n\nexport default {\n  name: \"StatistiquesView\",\n  data: () => ({\n    chipGroup: \"\",\n    rangs: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    champions: [],\n    tags: [\n      {\n        tag: \"Afficher les 10 meilleures attendances\",\n        icon: \"mdi-eye\",\n      },\n      {\n        tag: \"Afficher le classement des pays par CDM\",\n        icon: \"mdi-trophy\",\n      },\n      // {\n      //   tag: \"Afficher les 10 pays ayant le plus de CDM\",\n      //   icon: \"mdi-trophy\",\n      // },\n    ],\n    headers: [\n      { text: \"Rang\", value: \"rang\", sortable: false },\n      { text: \"Annee\", value: \"year\", sortable: false },\n      { text: \"Attendance\", value: \"attendance\", sortable: false },\n    ],\n    headers2: [\n      { text: \"Rang\", value: \"rang\", sortable: false },\n      { text: \"Pays\", value: \"team\" },\n      { text: \"Nombre de coupes\", value: \"no\" },\n    ],\n    tenBestAttendance: [],\n    loading: false,\n    loading2: false,\n  }),\n  computed: {\n    getChipValue() {\n      switch (this.chipGroup) {\n        case 0:\n          this.getTenBestAttendance();\n          break;\n        case 1:\n          this.getChampions();\n          break;\n        default:\n          break;\n      }\n      return this.chipGroup;\n    },\n  },\n  methods: {\n    async getTenBestAttendance() {\n      this.loading = true;\n      this.$apollo.query({ query: GET_TEN_BEST_ATTENDANCE }).then((result) => {\n        this.tenBestAttendance = result.data?.cups;\n        this.loading = false;\n      });\n    },\n    groupBy(tableauObjets, propriete) {\n      return tableauObjets.reduce(function (acc, obj) {\n        var cle = obj[propriete];\n        if (!acc[cle]) {\n          acc[cle] = [];\n        }\n        acc[cle].push(obj);\n        return acc;\n      }, {});\n    },\n    async getChampions() {\n      this.loading2 = true;\n      await this.$apollo\n        .query({\n          query: GET_ALL_CHAMPIONS,\n        })\n        .then((result) => {\n          let allChampions = result.data?.cups;\n\n          let temp = this.groupBy(allChampions, \"champion\");\n\n          var countsExtended = Object.keys(temp).map((k) => {\n            return { team: k, no: temp[k].length };\n          });\n\n          this.champions = countsExtended.sort((a, b) => b?.no - a?.no);\n\n          this.loading2 = false;\n        });\n    },\n  },\n};\n</script>\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatistiquesView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./StatistiquesView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./StatistiquesView.vue?vue&type=template&id=47d35e9c&\"\nimport script from \"./StatistiquesView.vue?vue&type=script&lang=js&\"\nexport * from \"./StatistiquesView.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Styles\nimport './VChipGroup.sass'\n\n// Extensions\nimport { BaseSlideGroup } from '../VSlideGroup/VSlideGroup'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n/* @vue/component */\nexport default mixins(\n  BaseSlideGroup,\n  Colorable\n).extend({\n  name: 'v-chip-group',\n\n  provide () {\n    return {\n      chipGroup: this,\n    }\n  },\n\n  props: {\n    column: Boolean,\n  },\n\n  computed: {\n    classes () {\n      return {\n        ...BaseSlideGroup.options.computed.classes.call(this),\n        'v-chip-group': true,\n        'v-chip-group--column': this.column,\n      }\n    },\n  },\n\n  watch: {\n    column (val) {\n      if (val) this.scrollOffset = 0\n\n      this.$nextTick(this.onResize)\n    },\n  },\n\n  methods: {\n    genData () {\n      return this.setTextColor(this.color, {\n        ...BaseSlideGroup.options.methods.genData.call(this),\n      })\n    },\n  },\n})\n"],"names":["attrs","model","callback","expression","_c","key","tag","_v","staticClass","headers","_vm","tenBestAttendance","scopedSlots","fn","item","champions","staticRenderFns","name","data","chipGroup","rangs","tags","icon","text","value","sortable","headers2","loading","loading2","computed","getChipValue","methods","query","groupBy","acc","then","team","no","component","render","mixins","BaseSlideGroup","Colorable","extend","provide","this","props","column","Boolean","classes","watch","val","scrollOffset","$nextTick","onResize","genData","setTextColor","color"],"sourceRoot":""}